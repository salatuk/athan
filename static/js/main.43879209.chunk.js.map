{"version":3,"sources":["helpers/helper.js","components/RequestStatus/index.js","API/actions/index.js","helpers/strings.js","actions/index.js","containers/Countries/index.js","containers/Cities/index.js","containers/Culture/index.js","components/ErrorMessage/index.js","components/Loader/index.js","containers/MonthPrayerTimes/index.js","containers/PrayerTimes/index.js","components/Clock/index.js","App.js","serviceWorker.js","helpers/httpClient.js","API/index.js","helpers/urls.js","sagas/GET_PRAYER_TIME_BY_CITY.js","sagas/GET_PRAYER_TIME_BY_ŸêCOUNTRY_AND_CITY.js","sagas/index.js","reducers/cities.js","reducers/prayer_time_informations.js","reducers/index.js","reducers/countries.js","reducers/active_country.js","reducers/active_city.js","reducers/cultures.js","reducers/active_Culture.js","index.js","ressources/sunrise-sunset/svg/016-cloudy-night-3.svg","ressources/sunrise-sunset/svg/002-sunrise.svg","ressources/sunrise-sunset/svg/001-sun.svg","ressources/sunrise-sunset/svg/015-cloudy-day-1.svg","ressources/sunrise-sunset/svg/003-sunset.svg","ressources/sunrise-sunset/svg/009-cloudy-night.svg"],"names":["transformer","ifElse","is","String","split","identity","isNilOrEmpty","anyPass","isEmpty","isNil","isSet","complement","isPathDefined","pathSatisfies","createAction","curry","predicate","obj","path","actionType","arguments","length","undefined","Error","actionTypeIsRequired","_len","payloadStructure","Array","_key","buildPayload","nth","flip","zipObj","_len2","payloadData","_key2","payload","assoc","splitTime","time","splitTimeZone","timeZone","replace","ErrorType","LoadingType","GET_PRAYER_TIME_REQUEST","GET_PRAYER_TIME_BY_CITY_REQUEST","getPrayerTime","getPrayerTimeByCity","getPrayerTimeByCityError","getPrayerTimeByCitySuccess","getElementByCulture","array","index","culture","languages","fr","en","ar","getDayByCulture","day","filteredDays","days","filter","item","getCitiesByCulture","ddlCities","map","city","label","cities","value","Object","objectSpread","getValueByCulture","object","cultures","prayerTime","errorMessage","gregorianMonths","hijriMonths","dayTimings","calendar","countriesPlaceholder","countries","key","citiesPlaceholder","country_id","currentYear","Date","getUTCFullYear","copyright","concat","selectCulture","Culture","type","selectCity","City","selectCountry","Country","Countries","getCountry","selectedCountry","_this","getCountriesByCulture","country","_this$props","props","defaultCountries","OnCountryChange","_this$props2","this","react_default","a","createElement","dist_default","className","onChange","options","placeholder","Component","connect","state","activeCountry","activeCulture","dispatch","bindActionCreators","Cities","OnCityChange","selectedCity","getCity","OnChanged","_this2","_this3","_this$props3","renderCities","defaultProps","activeCity","OnCultureChange","ErrorMessage","message","Spinner","react_loader_spinner_default","color","height","width","MonthPrayerTimes","SuperResponsiveTable","timings","date","gregorian","hijri","Asr","Dhuhr","Fajr","Isha","Maghrib","Sunrise","today","isToday","parseInt","getUTCDate","weekday","month","number","PrayerTimeInformations","renderTimeBloc","title","src","alt","renderTimeZoneBloc","prayerTimeInformations","renderTimes","_this$props$prayerTim","fajrIcone","sunriseIcone","dhuhrIcone","asrIcone","maghribIcone","ishaIcone","renderDayTitle","year","Clock","setInterval","setState","entry","App","handleClick","getMonth","getFullYear","renderDayTimings","PrayerTimes","renderPrayerTimeInformations","fetchingStatus","ErrorMessage_ErrorMessage","informations","_prayerTimeInformatio","data","containers_MonthPrayerTimes","renderHeader","containers_Culture","renderBody","containers_Countries","containers_Cities","Clock_Clock","Loader_Spinner","renderFooter","Boolean","window","location","hostname","match","HttpClient","config","classCallCheck","addRequestInterceptor","interceptor","client","interceptors","request","use","fulfilled","rejected","addResponseInterceptor","response","axios","create","baseURL","baseUrl","headers","timeout","withCredentials","requestInterceptors","forEach","responseInterceptors","createClass","url","additionalHeaders","get","post","put","patch","delete","API","assign","getPrayerTimeByCountryAndCity","method","route","aladhanUrl","prayZoneUrl","_ref","_ref2","regenerator_default","wrap","_context","prev","next","bffApi","call","sent","t0","console","log","toString","stop","_marked","GET_PRAYER_TIME_BY_COUNTRY_AND_CITY_marked","getPrayerTimeByCitySaga","getPrayerTimeByCountryAndCitySaga","takeEvery","sagas_marked","_context2","_marked2","defaultState","rootReducer","combineReducers","action","sagaMiddleware","createSagaMiddleware","store","applyMiddleware","createStore","createStoreWithMiddleware","reducers","ReactDOM","render","es","src_App_0","document","getElementById","run","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.43879209.chunk.js","sourcesContent":["import {\n  anyPass,\n  assoc,\n  complement,\n  curry,\n  flip,\n  identity,\n  ifElse,\n  is,\n  isEmpty,\n  isNil,\n  nth,\n  path,\n  pathSatisfies,\n  split,\n  zipObj,\n} from 'ramda/src';\n\nexport const transformer = ifElse(is(String), split('.'), identity);\n\n/**\n * Test if value is NilOrEmpty\n * @name isNilOrEmpty\n * @memberof RamdaHelper#\n * @see isPathSatisfied if you want to test nested object\n * @param {*} val\n * @returns {bool}\n * @example\n * isNilOrEmpty([]) //=> true\n * isNilOrEmpty({}) //=> true\n * isNilOrEmpty('') //=> true\n * isNilOrEmpty(null) //=> true\n * isNilOrEmpty(false) //=> false\n * isNilOrEmpty('test') //=> false\n * isNilOrEmpty(['test']) //=> false\n * isNilOrEmpty({ a: 1 }) //=> false\n */\nexport const isNilOrEmpty = anyPass([isEmpty, isNil]);\n\n/**\n * Returns `true` for value that are defined and not empty, `false` otherwise\n * @name isSet\n * @memberof RamdaHelper\n * @see isNilOrEmpty\n * @param {*} value\n * @returns {Boolean}\n * @example\n *\n * isSet([]) //=> false\n * isSet({}) //=> false\n * isSet('') //=> false\n * isSet(null) //=> false\n * isSet(false) //=> true\n * isSet('test') //=> true\n * isSet(['test']) //=> true\n * isSet({ a: 1 }) //=> true\n */\nexport const isSet = complement(isNilOrEmpty);\n\nconst isPathDefined = pathSatisfies(isSet);\n\n/**\n *  Returns `true` if the specified object property at given path isSet @see isSet\n *  returns `false` otherwise\n *  @name isPathSatisfied\n *  @memberof RamdaHelper#\n *  @param {string|string[]} propPath\n *  @param {*} obj\n *  @returns {Boolean}\n *  @example\n *\n *  isPathSatisfied('a.b.c', { a: { b: { c: 'c'} } }) //=> true\n *  isPathSatisfied(['a', 'b', 'c'], { a: { b: { c: 'c'} } }) //=> true\n *  isPathSatisfied('a.c.d', { a: { b: { c: 'c'} } }) //=> false\n *\n */\nexport const isPathSatisfied = curry((predicate, obj) =>\n  isPathDefined(transformer(predicate), obj)\n);\n\n/**\n *  Retrieve the value at the given path\n *\n *  @name getPath\n *  @memberof RamdaHelper#\n *  @param {string|string[]} path\n *  @param {Object} obj\n *  @returns {*} The data at `path`\n *  @example\n *\n *  getPath('a.b.c', { a: { b : { c : 'value' } } })  //=> 'value'\n *  getPath(['a', 'b', 'c'], { a: { b : { c : 'value' } } })  //=> 'value'\n *  getPath(['a', 'c', 'd'], { a: { b : { c : 'value' } } })  //=> undefined\n */\nexport const getPath = curry((predicate, obj) =>\n  path(transformer(predicate), obj)\n);\n\nconst actionTypeIsRequired = () => {\n  throw Error('You have to provide an actionType');\n};\n\n/**\n * Create an action for redux with at least a type and an empty payload.\n * @param {String} actionType indicates the type of action being performed, should typically be defined as string constants.\n * @param {...String} [payloadStructure] payload property names representing payload structure\n * @return {Function}\n *\n * @example\n * const TOGGLE_MENU = 'TOGGLE_MENU'\n * const toggleMenu = createAction(TOGGLE_MENU, 'isActive', 'isCollapsed')\n *\n * toggleMenu(true) => // { type: 'TOGGLE_MENU', payload: { isActive: true }}\n * toggleMenu(true, false) => // { type: 'TOGGLE_MENU', payload: { isActive: true, isCollapsed: false }}\n */\nexport const createAction = function reduxCreateAction(\n  actionType = actionTypeIsRequired(),\n  ...payloadStructure\n) {\n  const buildPayload = isEmpty(payloadStructure) ? nth(0) : flip(zipObj);\n\n  return (...payloadData) => {\n    const payload =\n      isEmpty(payloadStructure) && isEmpty(payloadData)\n        ? {}\n        : { payload: buildPayload(payloadData, payloadStructure) };\n\n    const action = assoc('type', actionType, payload);\n\n    if (process.env.NODE_ENV === 'test') {\n      // eslint-disable-next-line fp/no-mutating-methods\n      Object.defineProperty(action, '_reduxAction', {\n        enumerable: false,\n        writable: true,\n      });\n      action._reduxAction = {\n        name: actionType,\n        args: payloadStructure,\n      };\n    }\n\n    return action;\n  };\n};\n\nexport const splitTime = time => {\n  const array = time.split(' ');\n  return array[0];\n};\n\nexport const splitTimeZone = time => {\n  const array = time.split(' ');\n  const timeZone = array[1];\n  if (timeZone === '(+00)' || !timeZone) return 'GMT';\n\n  return 'GMT ' + timeZone.replace('(', '').replace(')', '');\n};\n","export const ErrorType = 'Error';\nexport const LoadingType = 'Loading';\nexport const SuccessType = 'Success';\n","import { createAction } from '../../helpers/helper';\n\nexport const GET_PRAYER_TIME_REQUEST = 'GET_PRAYER_TIME_REQUEST';\nexport const GET_PRAYER_TIME_REQUEST_ERROR = 'GET_PRAYER_TIME_REQUEST_ERROR';\nexport const GET_PRAYER_TIME_REQUEST_SUCCESS =\n  'GET_PRAYER_TIME_REQUEST_SUCCESS';\n\nexport const GET_PRAYER_TIME_BY_CITY_REQUEST =\n  'GET_PRAYER_TIME_BY_CITY_REQUEST';\nexport const GET_PRAYER_TIME_BY_CITY_REQUEST_ERROR =\n  'GET_PRAYER_TIME_BY_CITY_REQUEST_ERROR';\nexport const GET_PRAYER_TIME_BY_CITY_REQUEST_SUCCESS =\n  'GET_PRAYER_TIME_BY_CITY_REQUEST_SUCCESS';\n\nexport const getPrayerTime = createAction(\n  GET_PRAYER_TIME_REQUEST,\n  'city',\n  'country',\n  'method',\n  'month',\n  'year'\n);\nexport const getPrayerTimeError = createAction(\n  GET_PRAYER_TIME_REQUEST_ERROR,\n  'error'\n);\nexport const getPrayerTimeSuccess = createAction(\n  GET_PRAYER_TIME_REQUEST_SUCCESS\n);\n\nexport const getPrayerTimeByCity = createAction(\n  GET_PRAYER_TIME_BY_CITY_REQUEST,\n  'city'\n);\nexport const getPrayerTimeByCityError = createAction(\n  GET_PRAYER_TIME_BY_CITY_REQUEST_ERROR,\n  'error'\n);\nexport const getPrayerTimeByCitySuccess = createAction(\n  GET_PRAYER_TIME_BY_CITY_REQUEST_SUCCESS\n);\n","import { isNilOrEmpty } from './helper';\n\nexport const getElementByCulture = (array, index, culture) => {\n  switch (culture) {\n    case languages.fr:\n      return array[index].fr;\n    case languages.en:\n      return array[index].en;\n\n    default:\n      return array[index].ar;\n  }\n};\n\nexport const getDayByCulture = (day, culture) => {\n  const filteredDays = days.filter(item => item.ar === day);\n\n  if (isNilOrEmpty(filteredDays)) return day;\n\n  switch (culture) {\n    case languages.fr:\n      return filteredDays[0].fr;\n    case languages.en:\n      return filteredDays[0].en;\n\n    default:\n      return day;\n  }\n};\n\nexport const getCitiesByCulture = (ddlCities, culture) => {\n  if (isNilOrEmpty(ddlCities)) return null;\n\n  return ddlCities.map(city => {\n    const label = getElementByCulture(cities, city.value - 1, culture);\n\n    return { ...city, label };\n  });\n};\n\nexport const getValueByCulture = (object, culture) => {\n  switch (culture) {\n    case languages.fr:\n      return object.fr;\n    case languages.en:\n      return object.en;\n\n    default:\n      return object.ar;\n  }\n};\n\nexport const cultures = [\n  { value: 'ar', label: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©' },\n  { value: 'fr', label: 'Fran√ßais' },\n  { value: 'en', label: 'English' },\n];\n\nexport const languages = { ar: 'ar', fr: 'fr', en: 'en' };\n\nexport const prayerTime = {\n  ar: 'ÿ™ŸàŸÇŸäÿ™ ÿßŸÑÿµŸÑÿßÿ©',\n  fr: 'Horaire de la pri√®re',\n  en: 'Prayer time',\n};\n\nexport const errorMessage = {\n  ar: 'ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠ÿ© ÿ≠ÿßŸÑŸäÿß ÿßŸÑŸÖÿ±ÿ¨Ÿà ÿ•ÿπÿßÿØÿ© ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÑÿßÿ≠ŸÇÿß',\n  fr:\n    'Les informations ne sont pas disponibles actuellement. Veuillez r√©essayer plus tard.',\n  en: 'The information is not currently available. Please try again later.',\n};\n\nexport const gregorianMonths = [\n  { ar: 'ŸäŸÜÿßŸäÿ±', fr: 'Janvier', en: 'January' },\n  { ar: 'ŸÅÿ®ÿ±ÿßŸäÿ±', fr: 'F√©vrier', en: 'February' },\n  { ar: 'ŸÖÿßÿ±ÿ≥', fr: 'Mars', en: 'March' },\n  { ar: 'ÿ£ÿ®ÿ±ŸäŸÑ', fr: 'Avril', en: 'April' },\n  { ar: 'ŸÖÿßŸä', fr: 'Mai', en: 'May' },\n  { ar: 'ŸäŸàŸÜŸäŸà', fr: 'Juin', en: 'June' },\n  { ar: 'ŸäŸàŸÑŸäŸàÿ≤', fr: 'Juillet', en: 'July' },\n  { ar: 'ÿ∫ÿ¥ÿ™', fr: 'Ao√ªt', en: 'August' },\n  { ar: 'ÿ¥ÿ™ŸÜÿ®ÿ±', fr: 'Septembre', en: 'September' },\n  { ar: 'ÿ£ŸÉÿ™Ÿàÿ®ÿ±', fr: 'Octobre', en: 'October' },\n  { ar: 'ŸÜŸàŸÜÿ®ÿ±', fr: 'Novembre', en: 'November' },\n  { ar: 'ÿØÿ¨ŸÜÿ®ÿ±', fr: 'D√©cembre', en: 'December' },\n];\n\nexport const hijriMonths = [\n  { ar: 'ŸÖŸèÿ≠Ÿéÿ±ŸéŸëŸÖ', fr: 'Mouharram', en: 'Mu·∏•arram' },\n  { ar: 'ÿµŸéŸÅŸéÿ±', fr: 'Safar', en: '·π¢afar' },\n  { ar: 'ÿ±Ÿéÿ®ŸêŸäÿπ Ÿ±ŸÑŸíÿ£ŸéŸàŸéŸëŸÑ', fr: 'Rabia al awal', en: 'Rabƒ´ ø al-Awwal' },\n  { ar: 'ÿ±Ÿéÿ®ŸêŸäÿπ ÿßŸÑÿ´ÿßŸÜŸä', fr: 'Rabia ath-thani', en: 'Rabƒ´ ø ath-ThƒÅnƒ´' },\n  { ar: 'ÿ¨ŸèŸÖŸéÿßÿØŸéŸâŸ∞ Ÿ±ŸÑŸíÿ£ŸèŸàŸÑŸéŸâŸ∞', fr: 'Joumada al oula', en: 'JumƒÅd√° al-≈™l√°' },\n  { ar: 'ÿ¨ŸèŸÖŸéÿßÿØŸéŸâŸ∞ ÿßŸÑÿ´ÿßŸÜŸä', fr: 'Joumada ath-thani', en: 'JumƒÅd√° ath-ThƒÅnƒ´' },\n  { ar: 'ÿ±Ÿéÿ¨Ÿéÿ®', fr: 'Rajab', en: 'Rajab' },\n  { ar: 'ÿ¥ŸéÿπŸíÿ®ŸéÿßŸÜ', fr: 'Chaabane', en: 'Sha‚ÄòbƒÅn' },\n  { ar: 'ÿ±ŸéŸÖŸéÿ∂ŸéÿßŸÜ', fr: 'Ramadan', en: 'Rama·∏çƒÅn' },\n  { ar: 'ÿ¥ŸéŸàŸéŸëÿßŸÑ', fr: 'Chawwal', en: 'ShawwƒÅl' },\n  { ar: 'ÿ∞ŸèŸà Ÿ±ŸÑŸíŸÇŸéÿπŸíÿØŸéÿ©', fr: 'Dhou al qi`da', en: 'Dh≈´ al-Qa‚Äòdah' },\n  { ar: 'ÿ∞ŸèŸà Ÿ±ŸÑŸíÿ≠Ÿêÿ¨ŸéŸëÿ©', fr: 'Dhou al-hijja', en: 'Dh≈´ al-·∏§ijjah' },\n];\n\nexport const days = [\n  { ar: 'ÿßŸÑÿßÿ´ŸÜŸäŸÜ', fr: 'Lundi', en: 'Monday' },\n  { ar: 'ÿßŸÑÿ´ŸÑÿßÿ´ÿßÿ°', fr: 'Mardi', en: 'Tuesday' },\n  { ar: 'ÿßŸÑÿßÿ±ÿ®ÿπÿßÿ°', fr: 'Mercredi', en: 'Wednesday' },\n  { ar: 'ÿßŸÑÿÆŸÖŸäÿ≥', fr: 'Jeudi', en: 'Thursday' },\n  { ar: 'ÿßŸÑÿ¨ŸÖÿπÿ©', fr: 'Vendredi', en: 'Friday' },\n  { ar: 'ÿßŸÑÿ≥ÿ®ÿ™', fr: 'Samedi', en: 'Saturday' },\n  { ar: 'ÿßŸÑÿßÿ≠ÿØ', fr: 'Dimanche', en: 'Sunday' },\n];\n\nexport const dayTimings = [\n  { ar: 'ÿßŸÑŸÅÿ¨ÿ±', fr: 'Al-Fajr', en: 'Fajr' },\n  { ar: 'ÿßŸÑÿ¥ÿ±ŸàŸÇ', fr: 'Chourouk', en: 'Sunrise' },\n  { ar: 'ÿßŸÑÿ∏Ÿáÿ±', fr: 'Dhuhr', en: 'Dhuhr' },\n  { ar: 'ÿßŸÑÿπÿµÿ±', fr: 'Al-Asr', en: 'Asr' },\n  { ar: 'ÿßŸÑŸÖÿ∫ÿ±ÿ®', fr: 'Maghrib', en: 'Maghrib' },\n  { ar: 'ÿßŸÑÿπÿ¥ÿßÿ°', fr: 'Al-Ishaa', en: 'Isha' },\n];\n\nexport const calendar = [\n  { ar: 'Ÿáÿ¨ÿ±Ÿä', fr: 'Hijri', en: 'Hijri' },\n  { ar: 'ŸÖŸäŸÑÿßÿØŸä', fr: 'Gr√©gorien ', en: 'Gregorian' },\n];\n\nexport const day = { ar: 'ŸäŸàŸÖ', fr: 'Jour', en: 'Day' };\n\nexport const month = { ar: 'ÿ¥Ÿáÿ±', fr: 'Mois', en: 'Month' };\n\nexport const countriesPlaceholder = {\n  ar: 'ÿßÿÆÿ™ÿ± ÿßŸÑÿ®ŸÑÿØ',\n  fr: 'Choisissez un pays',\n  en: 'Select a country',\n};\n\nexport const countries = [\n  { value: 1, ar: 'ÿßŸÑŸÖÿ∫ÿ±ÿ®', fr: 'Maroc', en: 'Morocco', key: 'Morocco' },\n  { value: 2, ar: 'ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±', fr: 'Algerie', en: 'Algeria', key: 'Algeria' },\n  { value: 3, ar: 'ÿ™ŸàŸÜÿ≥', fr: 'Tunisie', en: 'Tunisia', key: 'Tunisia' },\n  {\n    value: 4,\n    ar: 'ŸÖŸàÿ±Ÿäÿ™ÿßŸÜŸäÿß',\n    fr: 'Mauritanie',\n    en: 'Mauritania',\n    key: 'Mauritania',\n  },\n  { value: 5, ar: 'ŸÑŸäÿ®Ÿäÿß', fr: 'Libye', en: 'Libya', key: 'Libya' },\n  { value: 6, ar: 'ŸÖÿµÿ±', fr: 'Egypte', en: 'Egypt', key: 'Egypt' },\n  { value: 7, ar: 'ŸÇÿ∑ÿ±', fr: 'Qatar', en: 'Qatar', key: 'Qatar' },\n  { value: 8, ar: 'ÿßŸÑÿ≥ÿπŸàÿØŸäÿ©', fr: 'Saudie', en: 'Saudia', key: 'Saudia' },\n  { value: 9, ar: 'ÿßŸÑÿ•ŸÖÿßÿ±ÿßÿ™', fr: 'Emirats', en: 'Emirats', key: 'Emirats' },\n];\n\nexport const citiesPlaceholder = {\n  ar: 'ÿßÿÆÿ™ÿ± ÿßŸÑŸÖÿØŸäŸÜÿ©',\n  fr: 'Choisissez une ville',\n  en: 'Select a city',\n};\n\nexport const cities = [\n  {\n    value: 1,\n    country_id: 1,\n    ar: 'ÿßŸÑÿ±ÿ®ÿßÿ∑',\n    fr: 'Rabat',\n    en: 'Rabat',\n    key: 'Rabat',\n  },\n  {\n    value: 2,\n    country_id: 2,\n    ar: 'ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±',\n    fr: 'Alger',\n    en: 'Algeria',\n    key: 'Algeria',\n  },\n  {\n    value: 3,\n    country_id: 3,\n    ar: 'ÿ™ŸàŸÜÿ≥',\n    fr: 'Tunis',\n    en: 'Tunisia',\n    key: 'Tunisia',\n  },\n  {\n    value: 4,\n    country_id: 4,\n    ar: 'ŸÜŸàÿßŸÉÿ¥Ÿàÿ∑',\n    fr: 'Nouakchott',\n    en: 'Nouakchott',\n    key: 'Nouakchott',\n  },\n  {\n    value: 5,\n    country_id: 5,\n    ar: 'ÿ∑ÿ±ÿßÿ®ŸÑÿ≥',\n    fr: 'Tripolie',\n    en: 'Tripoli',\n    key: 'Tripoli',\n  },\n  {\n    value: 6,\n    country_id: 6,\n    ar: 'ÿßŸÑŸÇÿßŸáÿ±ÿ©',\n    fr: 'Caire',\n    en: 'Cairo',\n    key: 'Cairo',\n  },\n  {\n    value: 7,\n    country_id: 7,\n    ar: 'ÿßŸÑÿØŸàÿ≠ÿ©',\n    fr: 'Doha',\n    en: 'Doha',\n    key: 'Doha',\n  },\n  {\n    value: 8,\n    country_id: 8,\n    ar: ' ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©',\n    fr: 'Mecque',\n    en: 'Mecca',\n    key: 'Mecca',\n  },\n  {\n    value: 9,\n    country_id: 1,\n    ar: 'ÿßŸÑÿØÿßÿ± ÿßŸÑÿ®Ÿäÿ∂ÿßÿ°',\n    fr: 'Casablanca',\n    en: 'Casablanca',\n    key: 'Casablanca',\n  },\n  { value: 10, country_id: 1, ar: 'ŸÅÿßÿ≥', fr: 'F√®s', en: 'Fes', key: 'Fes' },\n  {\n    value: 11,\n    country_id: 2,\n    ar: 'ŸàŸáÿ±ÿßŸÜ',\n    fr: 'Oran',\n    en: 'Ouahran',\n    key: 'Ouahran',\n  },\n  {\n    value: 12,\n    country_id: 1,\n    ar: 'ÿ∑ŸÜÿ¨ÿ©',\n    fr: 'Tanger',\n    en: 'Tangier',\n    key: 'Tangier',\n  },\n  {\n    value: 13,\n    country_id: 1,\n    ar: 'ÿßŸÑÿπŸäŸàŸÜ',\n    fr: 'La√¢youne',\n    en: 'Laayoune',\n    key: 'Laayoune',\n  },\n  {\n    value: 14,\n    country_id: 1,\n    ar: 'ÿßŸÑÿØÿßÿÆŸÑÿ©',\n    fr: 'Dakhla',\n    en: 'Dakhla',\n    key: 'Dakhla',\n  },\n  {\n    value: 15,\n    country_id: 1,\n    ar: 'ŸÖŸÉŸÜÿßÿ≥',\n    fr: 'Mekn√®s',\n    en: 'Meknes',\n    key: 'Meknes',\n  },\n  {\n    value: 16,\n    country_id: 1,\n    ar: 'ŸÖÿ±ÿßŸÉÿ¥',\n    fr: 'Marrakech',\n    en: 'Marrakesh',\n    key: 'Marrakesh',\n  },\n  {\n    value: 17,\n    country_id: 1,\n    ar: 'Ÿàÿ¨ÿØÿ©',\n    fr: 'Oujda',\n    en: 'Oujda',\n    key: 'Oujda',\n  },\n  {\n    value: 18,\n    country_id: 1,\n    ar: 'ÿ£ÿ∫ÿßÿØŸäÿ±',\n    fr: 'Agadir',\n    en: 'Agadir',\n    key: 'Agadir',\n  },\n  {\n    value: 19,\n    country_id: 1,\n    ar: 'ÿ™ÿ∑ŸàÿßŸÜ',\n    fr: 'T√©touan',\n    en: 'Tetouan',\n    key: 'Tetouan',\n  },\n  {\n    value: 20,\n    country_id: 1,\n    ar: 'ÿßŸÑÿ≠ÿ≥ŸäŸÖÿ©',\n    fr: 'Al Hoce√Øma',\n    en: 'Al Hoceima',\n    key: 'Al Hoceima',\n  },\n  {\n    value: 21,\n    country_id: 1,\n    ar: 'ÿßŸÑŸÜÿßÿ∏Ÿàÿ±',\n    fr: 'Nador',\n    en: 'Nador',\n    key: 'Nador',\n  },\n  {\n    value: 22,\n    country_id: 1,\n    ar: 'ÿßŸÑÿ¨ÿØŸäÿØÿ©',\n    fr: 'El Jadida',\n    en: 'El Jadida',\n    key: 'El Jadida',\n  },\n  {\n    value: 23,\n    country_id: 1,\n    ar: 'ÿßŸÑÿπÿ±ÿßÿ¶ÿ¥',\n    fr: 'Larache',\n    en: 'Larache',\n    key: 'Larache',\n  },\n  { value: 24, country_id: 1, ar: 'ÿ≥ŸÑÿß', fr: 'Sal√©', en: 'Sale', key: 'Sale' },\n  {\n    value: 25,\n    country_id: 1,\n    ar: 'ÿßŸÑÿµŸàŸäÿ±ÿ©',\n    fr: 'Essaouira',\n    en: 'Essaouira',\n    key: 'Essaouira',\n  },\n  {\n    value: 26,\n    country_id: 8,\n    ar: 'ÿßŸÑŸÖÿØŸäŸÜÿ© ÿßŸÑŸÖŸÜŸàÿ±ÿ©',\n    fr: 'M√©dine',\n    en: 'Medina',\n    key: 'Medina',\n  },\n];\n\nexport const cityLabel = {\n  ar: 'ŸÑ',\n  fr: 'Pour ',\n  en: 'In',\n};\n\nexport const timeZone = {\n  ar: 'ÿßŸÑŸÜÿ∑ÿßŸÇ ÿßŸÑÿ≤ŸÖŸÜŸä',\n  fr: 'Fuseau horaire',\n  en: 'Time Zone',\n};\n\nconst currentYear = () => {\n  const date = new Date();\n\n  return date.getUTCFullYear();\n};\n\nexport const copyright = {\n  ar: `ÿ¨ŸÖŸäÿπ ÿßŸÑÿ≠ŸÇŸàŸÇ ŸÖÿ≠ŸÅŸàÿ∏ÿ© ¬© ${currentYear()}`,\n  fr: `¬© Tous droits r√©serv√©s - ${currentYear()}`,\n  en: `Copyright  ${currentYear()} ¬© All Rights Reserved`,\n};\n","export function selectCulture(Culture) {\n  return {\n    type: 'SELECT_CULTURE',\n    payload: Culture,\n  };\n}\n\nexport function selectCity(City) {\n  return {\n    type: 'SELECT_CITY',\n    payload: City,\n  };\n}\n\nexport function selectCities(Cities) {\n  return {\n    type: 'SELECT_CITIES',\n    payload: Cities,\n  };\n}\n\nexport function selectCountry(Country) {\n  return {\n    type: 'SELECT_COUNTRY',\n    payload: Country,\n  };\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Dropdown from 'react-dropdown';\n\nimport 'react-dropdown/style.css';\nimport './styles.css';\nimport '../../ressources/Fonts/font.css';\nimport { isNilOrEmpty } from '../../helpers/helper';\nimport {\n  getValueByCulture,\n  getElementByCulture,\n  countries as defaultCountries,\n  countriesPlaceholder,\n} from '../../helpers/strings';\nimport { selectCountry } from '../../actions';\n\nclass Countries extends Component {\n  getCountry = selectedCountry => {\n    if (isNilOrEmpty(selectedCountry)) return null;\n\n    return this.getCountriesByCulture().filter(\n      country => country.value === selectedCountry.value\n    )[0];\n  };\n\n  getCountriesByCulture = () => {\n    const { countries, culture } = this.props;\n    if (isNilOrEmpty(countries)) return null;\n\n    return countries.map(country => {\n      const label = getElementByCulture(\n        defaultCountries,\n        country.value - 1,\n        culture\n      );\n\n      return { ...country, label };\n    });\n  };\n\n  OnCountryChange = country => {\n    const selectedCountry = this.getCountry(country);\n    this.props.selectCountry(selectedCountry);\n  };\n\n  render() {\n    const { country, culture } = this.props;\n\n    return (\n      <Dropdown\n        className=\"Countries\"\n        onChange={this.OnCountryChange}\n        options={this.getCountriesByCulture()}\n        value={this.getCountry(country)}\n        placeholder={getValueByCulture(countriesPlaceholder, culture)}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    country: state.activeCountry,\n    countries: state.countries,\n    culture: state.activeCulture,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ selectCountry: selectCountry }, dispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Countries);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Dropdown from 'react-dropdown';\nimport React, { Component } from 'react';\n\nimport 'react-dropdown/style.css';\nimport './styles.css';\nimport '../../ressources/Fonts/font.css';\nimport { isNilOrEmpty } from '../../helpers/helper';\nimport { func } from 'prop-types';\nimport {\n  citiesPlaceholder,\n  getCitiesByCulture,\n  getValueByCulture,\n} from '../../helpers/strings';\nimport { selectCity } from '../../actions';\n\nclass Cities extends Component {\n  static propTypes = {\n    OnChanged: func,\n  };\n\n  static defaultProps = {\n    OnChanged: () => undefined,\n  };\n\n  OnCityChange = city => {\n    const selectedCity = this.getCity(city);\n\n    this.props.selectCity(selectedCity);\n    this.props.OnChanged(selectedCity);\n  };\n\n  getCity = selectedCity => {\n    const { cities, culture } = this.props;\n    if (isNilOrEmpty(selectedCity)) return null;\n\n    return getCitiesByCulture(cities, culture).filter(\n      city => city.value === selectedCity.value\n    )[0];\n  };\n\n  renderCities() {\n    const { cities, culture } = this.props;\n\n    return getCitiesByCulture(cities, culture).filter(\n      city => city.country_id === this.props.country.value\n    );\n  }\n\n  render() {\n    const { city, cities, country, culture } = this.props;\n    if (!country) return null;\n    if (!cities) return <h3>ÿßŸÑŸÖÿ±ÿ¨Ÿà ÿ™ÿ≠ŸÖŸäŸÑ ŸÇÿßÿπÿØÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™</h3>;\n\n    return (\n      <Dropdown\n        className=\"Cities\"\n        onChange={city => this.OnCityChange(city)}\n        options={this.renderCities()}\n        placeholder={getValueByCulture(citiesPlaceholder, culture)}\n        value={this.getCity(city)}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    city: state.activeCity,\n    country: state.activeCountry,\n    cities: state.cities,\n    culture: state.activeCulture,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ selectCity: selectCity }, dispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cities);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Dropdown from 'react-dropdown';\n\nimport 'react-dropdown/style.css';\nimport './styles.css';\nimport '../../ressources/Fonts/font.css';\nimport { selectCulture } from '../../actions';\n\nclass Culture extends Component {\n  OnCultureChange = culture => {\n    // const selectedCulture = this.getCountry(culture);\n\n    this.props.selectCulture(culture.value);\n  };\n\n  render() {\n    return (\n      <Dropdown\n        onChange={this.OnCultureChange}\n        options={this.props.cultures}\n        value={this.props.culture}\n        placeholder=\"ÿßÿÆÿ™ÿ± ÿßŸÑŸÑÿ∫ÿ©\"\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    culture: state.activeCulture,\n    cultures: state.cultures,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ selectCulture: selectCulture }, dispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Culture);\n","import React, { Component } from 'react';\n\nimport './styles.css';\nimport '../../ressources/Fonts/font.css';\n\nexport default class ErrorMessage extends Component {\n  static defaultProps = {\n    message: '',\n  };\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <div className=\"Error\">\n        <div>{message}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport './styles.css';\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <div className=\"Loader-Spinner\">\n        <Loader type=\"Puff\" color=\"#00BFFF\" height=\"50\" width=\"50\" />\n      </div>\n    );\n  }\n}\n","import './styles.css';\nimport { connect } from 'react-redux';\nimport { Table, Tbody, Thead, Tr, Td, Th } from 'react-super-responsive-table';\nimport React, { Component } from 'react';\n\nimport {\n  calendar,\n  day,\n  dayTimings,\n  getElementByCulture,\n  getDayByCulture,\n  getValueByCulture,\n  gregorianMonths,\n  hijriMonths,\n  languages,\n  timeZone,\n} from '../../helpers/strings';\nimport { isNilOrEmpty, splitTime, splitTimeZone } from '../../helpers/helper';\n\nclass MonthPrayerTimes extends Component {\n  static defaultProps = {\n    culture: languages.ar,\n    days: null,\n  };\n\n  render() {\n    const { days, culture } = this.props;\n\n    if (isNilOrEmpty(days)) return null;\n\n    return (\n      <Table>\n        <Thead>\n          <Tr className=\"differentRow\">\n            <Th>{getValueByCulture(day, culture)}</Th>\n            <Th>{getValueByCulture(timeZone, culture)}</Th>\n            <Th>{getElementByCulture(calendar, 0, culture)}</Th>\n            <Th>{getElementByCulture(calendar, 1, culture)}</Th>\n            <Th>{getElementByCulture(dayTimings, 0, culture)}</Th>\n            <Th>{getElementByCulture(dayTimings, 1, culture)}</Th>\n            <Th>{getElementByCulture(dayTimings, 2, culture)}</Th>\n            <Th>{getElementByCulture(dayTimings, 3, culture)}</Th>\n            <Th>{getElementByCulture(dayTimings, 4, culture)}</Th>\n            <Th>{getElementByCulture(dayTimings, 5, culture)}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {days.map((day, key) => {\n            const { timings, date } = day;\n            const { gregorian, hijri } = date;\n\n            const { Asr, Dhuhr, Fajr, Isha, Maghrib, Sunrise } = timings;\n\n            const today = new Date();\n            const isToday = parseInt(gregorian.day, 10) === today.getUTCDate();\n\n            return (\n              <Tr key={key} className={isToday ? 'currentDay' : ''}>\n                <Td>{getDayByCulture(hijri.weekday.ar, culture)}</Td>\n                <Td>{splitTimeZone(Fajr)}</Td>\n                <Td>\n                  {getElementByCulture(\n                    hijriMonths,\n                    hijri.month.number - 1,\n                    culture\n                  )}{' '}\n                  {hijri.day}\n                </Td>\n                <Td>\n                  {getElementByCulture(\n                    gregorianMonths,\n                    gregorian.month.number - 1,\n                    culture\n                  )}{' '}\n                  {gregorian.day}\n                </Td>\n                <Td>{splitTime(Fajr)}</Td>\n                <Td>{splitTime(Sunrise)}</Td>\n                <Td>{splitTime(Dhuhr)}</Td>\n                <Td>{splitTime(Asr)}</Td>\n                <Td>{splitTime(Maghrib)}</Td>\n                <Td>{splitTime(Isha)}</Td>\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    culture: state.activeCulture,\n  };\n}\n\nexport default connect(mapStateToProps)(MonthPrayerTimes);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport './styles.css';\nimport {\n  dayTimings,\n  getCitiesByCulture,\n  getDayByCulture,\n  getElementByCulture,\n  getValueByCulture,\n  hijriMonths,\n  languages,\n  timeZone,\n} from '../../helpers/strings';\nimport fajrIcone from '../../ressources/sunrise-sunset/svg/016-cloudy-night-3.svg';\nimport sunriseIcone from '../../ressources/sunrise-sunset/svg/002-sunrise.svg';\nimport dhuhrIcone from '../../ressources/sunrise-sunset/svg/001-sun.svg';\nimport asrIcone from '../../ressources/sunrise-sunset/svg/015-cloudy-day-1.svg';\nimport maghribIcone from '../../ressources/sunrise-sunset/svg/003-sunset.svg';\nimport ishaIcone from '../../ressources/sunrise-sunset/svg/009-cloudy-night.svg';\nimport { isNilOrEmpty, splitTime, splitTimeZone } from '../../helpers/helper';\n\nclass PrayerTimeInformations extends Component {\n  static defaultProps = {\n    date: null,\n    prayerTimeInformations: null,\n  };\n\n  getCity = selectedCity => {\n    const { cities, culture } = this.props;\n    if (isNilOrEmpty(selectedCity)) return null;\n\n    return getCitiesByCulture(cities, culture).filter(\n      city => city.value === selectedCity.value\n    )[0];\n  };\n\n  renderTimeBloc = (title, time, src, alt) => {\n    return (\n      <div className=\"Time-Bloc\">\n        <img className=\"img\" src={src} alt={alt} />\n        <h4 className=\"day-time\">{`${splitTime(time)}${title}`}</h4>\n      </div>\n    );\n  };\n\n  renderTimeZoneBloc = () => {\n    const { Fajr } = this.props.prayerTimeInformations;\n    const { culture } = this.props;\n\n    return `${getValueByCulture(timeZone, culture)} ${splitTimeZone(Fajr)}`;\n  };\n\n  renderTimes = () => {\n    const {\n      Asr,\n      Dhuhr,\n      Fajr,\n      Isha,\n      Maghrib,\n      Sunrise,\n    } = this.props.prayerTimeInformations;\n    const { culture } = this.props;\n\n    return (\n      <div className=\"Time-Container\">\n        {this.renderTimeBloc(\n          ` : ${getElementByCulture(dayTimings, 0, culture)}`,\n          Fajr,\n          fajrIcone,\n          'Fajr'\n        )}\n        {this.renderTimeBloc(\n          ` : ${getElementByCulture(dayTimings, 1, culture)}`,\n          Sunrise,\n          sunriseIcone,\n          'Sunrise'\n        )}\n        {this.renderTimeBloc(\n          ` : ${getElementByCulture(dayTimings, 2, culture)}`,\n          Dhuhr,\n          dhuhrIcone,\n          'Dhuhr'\n        )}\n        {this.renderTimeBloc(\n          ` : ${getElementByCulture(dayTimings, 3, culture)}`,\n          Asr,\n          asrIcone,\n          'Asr'\n        )}\n        {this.renderTimeBloc(\n          ` : ${getElementByCulture(dayTimings, 4, culture)}`,\n          Maghrib,\n          maghribIcone,\n          'Maghrib'\n        )}\n        {this.renderTimeBloc(\n          ` : ${getElementByCulture(dayTimings, 5, culture)}`,\n          Isha,\n          ishaIcone,\n          'Isha'\n        )}\n      </div>\n    );\n  };\n\n  renderDayTitle = () => {\n    const { culture, date } = this.props;\n    const { hijri } = date;\n    const day = getDayByCulture(hijri.weekday.ar, culture);\n    const month = getElementByCulture(\n      hijriMonths,\n      hijri.month.number - 1,\n      culture\n    );\n\n    if (culture === languages.ar)\n      return `${date.hijri.year} ${day} ${date.hijri.day} ${month}`;\n\n    return `${day} ${date.hijri.day} ${month} ${date.hijri.year} `;\n  };\n\n  render() {\n    const { city } = this.props;\n    if (!city) return null;\n\n    return (\n      <div className=\"Container\">\n        <hr />\n        <h2>{this.getCity(city).label}</h2>\n        <h2>{this.renderTimeZoneBloc()}</h2>\n        <h4>{this.renderDayTitle()}</h4>\n        {this.renderTimes()}\n        <hr />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities,\n    city: state.activeCity,\n    country: state.activeCountry,\n    culture: state.activeCulture,\n  };\n};\n\nexport default connect(mapStateToProps)(PrayerTimeInformations);\n","import React, { Component } from 'react';\nimport { Clock as LiveClock } from 'react-clock';\n\nimport './styles.css';\n\nexport default class Clock extends Component {\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    setInterval(() => this.setState({ date: new Date() }), 1000);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <LiveClock value={this.state.date} />\n      </div>\n    );\n  }\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport './App.css';\nimport './ressources/Fonts/font.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { isNilOrEmpty } from './helpers/helper';\nimport { ErrorType, LoadingType } from './components/RequestStatus';\nimport { getPrayerTimeByCity, getPrayerTime } from './API/actions';\nimport Countries from './containers/Countries';\nimport Cities from './containers/Cities';\nimport Culture from './containers/Culture';\nimport ErrorMessage from './components/ErrorMessage';\nimport Loader from './components/Loader';\nimport MonthPrayerTimes from './containers/MonthPrayerTimes';\nimport PrayerTimeInformations from './containers/PrayerTimes';\nimport {\n  copyright,\n  errorMessage,\n  getValueByCulture,\n  prayerTime,\n  languages,\n} from './helpers/strings';\nimport Clock from './components/Clock';\n\nclass App extends Component {\n  static defaultProps = {\n    culture: languages.ar,\n  };\n\n  handleClick = city => {\n    const { country, getPrayerTime } = this.props;\n    const date = new Date();\n\n    if (isNilOrEmpty(city)) return null;\n    getPrayerTime(\n      city.key,\n      country.key,\n      2,\n      date.getMonth() + 1,\n      date.getFullYear()\n    );\n  };\n\n  renderDayTimings = (timings, date) => {\n    if (isNilOrEmpty(timings) || isNilOrEmpty(date)) return null;\n\n    return (\n      <div className=\"App-block\" key={date.hijri.day}>\n        <PrayerTimeInformations date={date} prayerTimeInformations={timings} />\n      </div>\n    );\n  };\n\n  renderPrayerTimeInformations = () => {\n    const { culture } = this.props;\n    const { prayerTimeInformations } = this.props.prayerTimeInformations;\n\n    if (prayerTimeInformations.fetchingStatus === ErrorType)\n      return (\n        <ErrorMessage message={getValueByCulture(errorMessage, culture)} />\n      );\n    if (prayerTimeInformations.fetchingStatus === LoadingType) return null;\n\n    if (isNilOrEmpty(prayerTimeInformations.informations)) return null;\n\n    const today = new Date();\n    const { date, timings } = prayerTimeInformations.informations.data.filter(\n      day => parseInt(day.date.gregorian.day, 10) === today.getUTCDate()\n    )[0];\n\n    if (isNilOrEmpty(timings)) return null;\n\n    return [\n      this.renderDayTimings(timings, date),\n      <MonthPrayerTimes days={prayerTimeInformations.informations.data} />,\n    ];\n  };\n\n  renderHeader = () => {\n    const { culture } = this.props;\n\n    return (\n      <header className=\"App-header\">\n        <Culture />\n        <h1>{getValueByCulture(prayerTime, culture)}</h1>\n      </header>\n    );\n  };\n\n  renderBody = () => {\n    const { prayerTimeInformations } = this.props.prayerTimeInformations;\n    return (\n      <div className=\"App-body\">\n        <div className=\"App-Container\">\n          <div className=\"App-block\">\n            <Countries />\n            <Cities OnChanged={this.handleClick} />\n            <Clock />\n            {prayerTimeInformations.fetchingStatus === LoadingType ? (\n              <Loader />\n            ) : null}\n          </div>\n          {this.renderPrayerTimeInformations()}\n        </div>\n      </div>\n    );\n  };\n\n  renderFooter = () => {\n    const { culture } = this.props;\n\n    return (\n      <footer>\n        <div className=\"copyright\">{getValueByCulture(copyright, culture)}</div>\n      </footer>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.renderHeader()}\n        {this.renderBody()}\n        {this.renderFooter()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    prayerTimeInformations: state.prayerTimeInformations,\n    city: state.activeCity,\n    country: state.activeCountry,\n    culture: state.activeCulture,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getPrayerTime: bindActionCreators(getPrayerTime, dispatch),\n  getPrayerTimeByCity: bindActionCreators(getPrayerTimeByCity, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * An opiniated isomorphic HTTP client supporting base methods on a specific domain\n * @module http-client\n */\n\nimport axios from 'axios';\n\n/**\n * HTTP Client\n */\nexport class HttpClient {\n  static requestInterceptors = [];\n  static responseInterceptors = [];\n\n  constructor(config) {\n    this.client = axios.create({\n      baseURL: config.baseUrl,\n      headers: config.headers,\n      timeout: config.timeout || 0,\n      withCredentials: config.withCredentials || false,\n    });\n\n    HttpClient.requestInterceptors.forEach(interceptor =>\n      this.addRequestInterceptor(interceptor)\n    );\n\n    HttpClient.responseInterceptors.forEach(interceptor => {\n      this.addResponseInterceptor(interceptor);\n    });\n  }\n\n  addRequestInterceptor = interceptor =>\n    this.client.interceptors.request.use(\n      interceptor.fulfilled,\n      interceptor.rejected\n    );\n\n  addResponseInterceptor = interceptor =>\n    this.client.interceptors.response.use(\n      interceptor.fulfilled,\n      interceptor.rejected\n    );\n\n  /**\n   * Perform a GET request\n   *\n   * @example\n   * // Will query ${baseUrl}/route\n   * client.get('/route').then(...).catch(...)\n   *\n   * @example\n   * const response = await client.get('/')\n   *\n   * @param {string} url Url of the request. Appended to baseUrl\n   * @param {Object} [additionalHeaders={}] Additional headers to include in the request\n   *\n   * @returns {Promise<Object>}  A promise that fulfills with the response when the request is\n   *  complete, or rejected with and error.\n   */\n  get(url, additionalHeaders = {}) {\n    return this.client.get(url, { headers: additionalHeaders });\n  }\n\n  /**\n   * Perform a POST request\n   *\n   * @example\n   * client.post('/', { value: 'key' }).then(...).catch(...)\n   *\n   * @example\n   * const response = await client.post('/', { value: 'key' })\n   *\n   * @param {string} url Url of the request. Appended to baseUrl\n   * @param {Object} [data={}] Request body\n   * @param {Object} [additionalHeaders={}] Additional headers to include in the request\n   *\n   * @returns {Promise<Object>}  A promise that fulfills with the response when the request is\n   *  complete, or rejected with and error.\n   */\n  post(url, data = {}, additionalHeaders = {}) {\n    return this.client.post(url, data, { headers: additionalHeaders });\n  }\n\n  /**\n   * Perform a PUT request\n   *\n   * @example\n   * client.put('/', { value: 'key' }).then(...).catch(...)\n   *\n   * @example\n   * const response = await client.put('/', { value: 'key' })\n   *\n   * @param {string} url Url of the request. Appended to baseUrl\n   * @param {Object} [data={}] Request body\n   * @param {Object} [additionalHeaders={}] Additional headers to include in the request\n   *\n   * @returns {Promise<Object>}  A promise that fulfills with the response when the request is\n   *  complete, or rejected with and error.\n   */\n  put(url, data = {}, additionalHeaders = {}) {\n    return this.client.put(url, data, { headers: additionalHeaders });\n  }\n\n  /**\n   * Perform a PATCH request\n   *\n   * @example\n   * client.patch('/', { value: 'key' }).then(...).catch(...)\n   *\n   * @example\n   * const response = await client.patch('/', { value: 'key' })\n   *\n   * @param {string} url Url of the request. Appended to baseUrl\n   * @param {Object} [data={}] Request body\n   * @param {Object} [additionalHeaders={}] Additional headers to include in the request\n   *\n   * @returns {Promise<Object>}  A promise that fulfills with the response when the request is\n   *  complete, or rejected with and error.\n   */\n  patch(url, data = {}, additionalHeaders = {}) {\n    return this.client.patch(url, data, { headers: additionalHeaders });\n  }\n\n  /**\n   * Perform a DELETE request\n   *\n   * @example\n   * client.delete('/').then(...).catch(...)\n   *\n   * @example\n   * const response = await client.delete('/')\n   *\n   * @param {string} url Url of the request. Appended to baseUrl\n   * @param {Object} [additionalHeaders={}] Additional headers to include in the request\n   *\n   * @returns {Promise<Object>}  A promise that fulfills with the response when the request is\n   *  complete, or rejected with and error.\n   */\n  delete(url, additionalHeaders = {}) {\n    return this.client.delete(url, { headers: additionalHeaders });\n  }\n\n  /**\n   * REQUEST with CONFIG\n   * Exemple: retry request with config.\n   *\n   * @example\n   * client.request(response.config).then(...).catch(...)\n   *\n   * @returns {Promise<Object>}  A promise that fulfills with the response when the request is\n   *  complete, or rejected with and error.\n   */\n  request(config) {\n    return this.client.request(config);\n  }\n}\n\n/**\n * HTTP Client contructor.\n *\n * @example\n * const client = httpClient({ baseUrl: 'http://api.aladhan.com'})\n *\n * @param {Object} config Configuration for this client\n * @param {string} config.baseUrl Usually the domain\n * @param {Object} config.headers Headers to include in every requests from this client\n *\n * @returns {Object} Ready to use client\n */\nexport default function httpClient(config) {\n  return new HttpClient(config);\n}\n","import httpClient from '../helpers/httpClient';\n\nconst Timeout = 30000;\n\n/**\n * BFF Client constructor.\n *\n * @example\n * const client = bffClient('http://api.aladhan.com')\n * @param {String} baseUrl Usually the bff base domain\n * @param headers {Object} http headers to append to each request\n * @returns {Object} Ready to use client\n */\n\nexport default (baseUrl, headers = {}) => {\n  const client = httpClient({\n    baseUrl,\n    withCredentials: false,\n    timeout: Timeout,\n    headers: Object.assign({}, headers),\n  });\n\n  return {\n    /**\n     * Get Adan Time By Country and City\n     *\n     * @example\n     * client.getPrayerTimeByCountryAndCity(\n     *   'country',\n     *   'city',\n     *   'method',\n     *   'month',\n     *   'year',\n     * ).then(...).catch(...)\n     *\n     * @param {String} [city]\n     * @param {String} [country]\n     * @param {Int} [method]\n     * @param {Int} [month]\n     * @param {Int} [year]\n     * @returns {Promise<Object>}  A promise that fulfills with the response when the request is\n     *  complete, or rejected with and error.\n     */\n    getPrayerTimeByCountryAndCity: (city, country, method, month, year) => {\n      const route = `/v1/calendarByCity?city=${city}&country=${country}&method=${method}&month=${month}&year=${year}`;\n\n      return client.get(route);\n    },\n\n    /**\n     * Get Adan Time By City\n     *\n     * @example\n     * client.getPrayerTimeByCity(\n     *   'city',\n     * ).then(...).catch(...)\n     *\n     * @param {String} [city]\n     * @returns {Promise<Object>}  A promise that fulfills with the response when the request is\n     *  complete, or rejected with and error.\n     */\n    getPrayerTimeByCity: city => {\n      const route = `/v2/times/today.json?city=${city}`;\n\n      return client.get(route);\n    },\n  };\n};\n","export const aladhanUrl = 'https://api.aladhan.com';\nexport const prayZoneUrl = 'https://api.pray.zone';\n","import { call, put } from 'redux-saga/effects';\n\nimport bffApi from '../API';\nimport { prayZoneUrl } from '../helpers/urls';\nimport {\n  getPrayerTimeByCityError,\n  getPrayerTimeByCitySuccess,\n} from '../API/actions';\n\nexport default function* getPrayerTimeByCity({ payload }) {\n  try {\n    const { city } = payload;\n    const client = bffApi(prayZoneUrl);\n\n    const { data } = yield call(client.getPrayerTimeByCity, city);\n    yield put(getPrayerTimeByCitySuccess(data));\n  } catch (e) {\n    console.log(e);\n    yield put(getPrayerTimeByCityError(e.toString()));\n  }\n}\n","import { call, put } from 'redux-saga/effects';\n\nimport bffApi from '../API';\nimport { aladhanUrl } from '../helpers/urls';\nimport {\n  getPrayerTimeByCityError,\n  getPrayerTimeByCitySuccess,\n} from '../API/actions';\n\nexport default function* getPrayerTimeByCountryAndCity({ payload }) {\n  try {\n    const { city, country, method, month, year } = payload;\n    const client = bffApi(aladhanUrl);\n    const { data } = yield call(\n      client.getPrayerTimeByCountryAndCity,\n      city,\n      country,\n      method,\n      month,\n      year\n    );\n    yield put(getPrayerTimeByCitySuccess(data));\n  } catch (e) {\n    console.log(e);\n    yield put(getPrayerTimeByCityError(e.toString()));\n  }\n}\n","import { takeEvery } from 'redux-saga/effects';\n\nimport {\n  GET_PRAYER_TIME_REQUEST,\n  GET_PRAYER_TIME_BY_CITY_REQUEST,\n} from '../API/actions';\nimport getPrayerTimeByCity from './GET_PRAYER_TIME_BY_CITY';\nimport getPrayerTimeByCountryAndCity from './GET_PRAYER_TIME_BY_ŸêCOUNTRY_AND_CITY';\n\nexport function* getPrayerTimeByCitySaga() {\n  yield takeEvery(GET_PRAYER_TIME_BY_CITY_REQUEST, getPrayerTimeByCity);\n}\n\nexport function* getPrayerTimeByCountryAndCitySaga() {\n  yield takeEvery(GET_PRAYER_TIME_REQUEST, getPrayerTimeByCountryAndCity);\n}\n","import { cities } from './../helpers/strings';\n\nconst defaultState = cities;\n\nexport default function(state = defaultState, action) {\n  switch (action.type) {\n    case 'SELECT_CITIES':\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import {\n  ErrorType,\n  LoadingType,\n  SuccessType,\n} from '../components/RequestStatus';\nimport {\n  GET_PRAYER_TIME_REQUEST,\n  GET_PRAYER_TIME_REQUEST_ERROR,\n  GET_PRAYER_TIME_REQUEST_SUCCESS,\n  GET_PRAYER_TIME_BY_CITY_REQUEST,\n  GET_PRAYER_TIME_BY_CITY_REQUEST_ERROR,\n  GET_PRAYER_TIME_BY_CITY_REQUEST_SUCCESS,\n} from '../API/actions';\n\nconst defaultState = {\n  prayerTimeInformations: {\n    informations: null,\n    fetchingStatus: SuccessType,\n  },\n};\n\nexport default function(state = defaultState, action) {\n  switch (action.type) {\n    case GET_PRAYER_TIME_REQUEST:\n      return {\n        ...state,\n        prayerTimeInformations: {\n          ...state.prayerTimeInformations,\n          fetchingStatus: LoadingType,\n        },\n      };\n\n    case GET_PRAYER_TIME_REQUEST_ERROR:\n      return {\n        ...state,\n        prayerTimeInformations: {\n          ...state.prayerTimeInformations,\n          fetchingStatus: ErrorType,\n        },\n      };\n\n    case GET_PRAYER_TIME_REQUEST_SUCCESS:\n      return {\n        ...state,\n        prayerTimeInformations: {\n          ...state.prayerTimeInformations,\n          informations: action.payload,\n          fetchingStatus: SuccessType,\n        },\n      };\n\n    case GET_PRAYER_TIME_BY_CITY_REQUEST:\n      return {\n        ...state,\n        prayerTimeInformations: {\n          ...state.prayerTimeInformations,\n          fetchingStatus: LoadingType,\n        },\n      };\n\n    case GET_PRAYER_TIME_BY_CITY_REQUEST_ERROR:\n      return {\n        ...state,\n        prayerTimeInformations: {\n          ...state.prayerTimeInformations,\n          fetchingStatus: ErrorType,\n        },\n      };\n\n    case GET_PRAYER_TIME_BY_CITY_REQUEST_SUCCESS:\n      return {\n        ...state,\n        prayerTimeInformations: {\n          ...state.prayerTimeInformations,\n          informations: action.payload,\n          fetchingStatus: SuccessType,\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport ActiveCity from './active_city';\nimport ActiveCountry from './active_country';\nimport ActiveCulture from './active_Culture';\nimport Cities from './cities';\nimport Countries from './countries';\nimport Cultures from './cultures';\nimport PrayerTimeInformations from './prayer_time_informations';\n\nconst rootReducer = combineReducers({\n  countries: Countries,\n  activeCountry: ActiveCountry,\n  cities: Cities,\n  activeCity: ActiveCity,\n  prayerTimeInformations: PrayerTimeInformations,\n  cultures: Cultures,\n  activeCulture: ActiveCulture,\n});\n\nexport default rootReducer;\n","import { countries } from './../helpers/strings';\n\nexport default function() {\n  return countries;\n}\n","export default function(state = null, action) {\n  switch (action.type) {\n    case 'SELECT_COUNTRY':\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","export default function(state = null, action) {\n  switch (action.type) {\n    case 'SELECT_CITY':\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { cultures } from './../helpers/strings';\n\nexport default function() {\n  return cultures;\n}\n","export default function(state = null, action) {\n  switch (action.type) {\n    case 'SELECT_CULTURE':\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport {\n  getPrayerTimeByCitySaga,\n  getPrayerTimeByCountryAndCitySaga,\n} from './sagas';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst createStoreWithMiddleware = applyMiddleware(sagaMiddleware)(createStore);\nconst store = createStoreWithMiddleware(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nsagaMiddleware.run(getPrayerTimeByCitySaga);\nsagaMiddleware.run(getPrayerTimeByCountryAndCitySaga);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/016-cloudy-night-3.28157ec2.svg\";","module.exports = __webpack_public_path__ + \"static/media/002-sunrise.1f69a3e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/001-sun.004ec82a.svg\";","module.exports = __webpack_public_path__ + \"static/media/015-cloudy-day-1.aa8cc377.svg\";","module.exports = __webpack_public_path__ + \"static/media/003-sunset.53a38aac.svg\";","module.exports = __webpack_public_path__ + \"static/media/009-cloudy-night.5a43dec2.svg\";"],"sourceRoot":""}